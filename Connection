/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package connection;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class ConnectionFactory {
    
    
    private static final String DRIVER  = "com.mysql.cj.jdbc.Driver";
    private  static final String URL  = "jdbc:mysql://localhost:3306/fretedercim?zeroDateTimeBehavior=convertToNull";
    private  static final String USER = "root";
    private  static final String PASSWORD = "";
    
    public static Connection getConnection(){
        try {
            Class.forName(DRIVER);
            return  DriverManager.getConnection(URL, USER, PASSWORD);
        } 
        catch (ClassNotFoundException |SQLException ex) {
          JOptionPane.showMessageDialog(null, "Erro na conex達o com o banco de dados!"+ "Erro" + JOptionPane.ERROR_MESSAGE + ex );
            Logger.getLogger(ConnectionFactory.class.getName()).log(Level.SEVERE, "Erro na conex達o: ", ex);
            return null; // Retorna null se a conex達o falhar
          
        }
        
    }
    public static void  closeConnection(Connection con){
        try{
            if(con != null){
                con.close();
            }
                    
                    
        }catch(SQLException  ex){
            JOptionPane.showMessageDialog(null, " Erro ao fechar a conex達o " + ex );
            
        }
        
        
    }
    public static void  closeConnection(Connection con , PreparedStatement stmt){
        closeConnection(con);
        try{
            if(stmt != null){
                stmt.close();
            }
                    
                    
        }catch(SQLException  ex){
            JOptionPane.showMessageDialog(null, " Erro ao fechar ao PreparedStatement " + ex );
            
        }
        
        
    }
    public static void  closeConnection(Connection con , PreparedStatement stmt , ResultSet rs){
        closeConnection(con,stmt);
        try{
            if(rs != null){
                rs.close();
            }
                    
                    
        }catch(SQLException  ex){
            JOptionPane.showMessageDialog(null, " Erro ao fechar ao ResultSet " + ex );
            
        }
        
        
    }
    
    
    
}
